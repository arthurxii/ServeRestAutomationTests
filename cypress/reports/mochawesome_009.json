{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-29T20:45:46.012Z",
    "end": "2025-01-29T20:45:47.405Z",
    "duration": 1393,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e6523db7-34a0-4945-9f01-e4077313822c",
      "title": "",
      "fullFile": "cypress\\tests\\api\\usuarios\\postUsuarios.cy.js",
      "file": "cypress\\tests\\api\\usuarios\\postUsuarios.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6ae17fb7-790b-49d1-910d-fbd122b0e215",
          "title": "POST Usuarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve cadastrar usuario com sucesso",
              "fullTitle": "POST Usuarios deve cadastrar usuario com sucesso",
              "timedOut": null,
              "duration": 231,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\nconst administrador = Math.random() < 0.5 ? 'true' : 'false';\ncy.api_postUsuarios(nome, email, password, administrador).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.be.not.null;\n  expect(response.body._id).is.not.null;\n});",
              "err": {},
              "uuid": "5d544635-d011-40a3-942a-1c6a2d8fd76a",
              "parentUUID": "6ae17fb7-790b-49d1-910d-fbd122b0e215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve cadastrar usuario admin com sucesso",
              "fullTitle": "POST Usuarios deve cadastrar usuario admin com sucesso",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\nconst administrador = 'true';\ncy.api_postUsuarios(nome, email, password, administrador).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body).to.be.not.null;\n  expect(response.body._id).is.not.null;\n});",
              "err": {},
              "uuid": "6430317a-e6e7-4296-9c8c-0e6491e8c71c",
              "parentUUID": "6ae17fb7-790b-49d1-910d-fbd122b0e215",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d544635-d011-40a3-942a-1c6a2d8fd76a",
            "6430317a-e6e7-4296-9c8c-0e6491e8c71c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f069b35f-d81f-493f-91a7-ee8b44958706",
          "title": "Erros",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "não deve cadastrar com email já cadastrado",
              "fullTitle": "Erros não deve cadastrar com email já cadastrado",
              "timedOut": null,
              "duration": 436,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\nconst administrador = Math.random() < 0.5 ? 'true' : 'false';\ncy.api_postUsuarios(nome, email, password, administrador).then(response => {\n  expect(response.status).to.eq(201);\n  cy.api_postUsuarios(nome, email, password, administrador).then(response => {\n    expect(response.status).to.eq(400);\n    expect(response.body.message).to.contain('Este email já está sendo usado');\n  });\n});",
              "err": {},
              "uuid": "e67b4d08-f05a-45df-9f4d-418dbb9c5b1d",
              "parentUUID": "f069b35f-d81f-493f-91a7-ee8b44958706",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve cadastrar com email inválido",
              "fullTitle": "Erros não deve cadastrar com email inválido",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = 'teste@teste';\nconst password = _faker.faker.internet.password();\nconst administrador = Math.random() < 0.5 ? 'true' : 'false';\ncy.api_postUsuarios(nome, email, password, administrador).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('email', 'email deve ser um email válido');\n});",
              "err": {},
              "uuid": "d998d353-fe8a-4c76-a6d1-4bb1b567e470",
              "parentUUID": "f069b35f-d81f-493f-91a7-ee8b44958706",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve cadastrar com campos obrigatórios vazios",
              "fullTitle": "Erros não deve cadastrar com campos obrigatórios vazios",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = '';\nconst email = '';\nconst password = '';\nconst administrador = '';\ncy.api_postUsuarios(nome, email, password, administrador).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.all.keys('nome', 'email', 'password', 'administrador');\n  expect(response.body).to.deep.include({\n    nome: 'nome não pode ficar em branco',\n    email: 'email não pode ficar em branco',\n    password: 'password não pode ficar em branco',\n    administrador: \"administrador deve ser 'true' ou 'false'\"\n  });\n});",
              "err": {},
              "uuid": "fbfaa111-d766-478b-9a93-6aac99670192",
              "parentUUID": "f069b35f-d81f-493f-91a7-ee8b44958706",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e67b4d08-f05a-45df-9f4d-418dbb9c5b1d",
            "d998d353-fe8a-4c76-a6d1-4bb1b567e470",
            "fbfaa111-d766-478b-9a93-6aac99670192"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 889,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}