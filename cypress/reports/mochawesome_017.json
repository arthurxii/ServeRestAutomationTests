{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-29T14:00:11.425Z",
    "end": "2025-01-29T14:00:14.670Z",
    "duration": 3245,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36b623ea-8ba6-4ddb-9227-b214eca5f8ed",
      "title": "",
      "fullFile": "cypress\\tests\\api\\produtos\\postProdutos.cy.js",
      "file": "cypress\\tests\\api\\produtos\\postProdutos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7544983c-46e9-4631-85d0-6a94e19f4ba0",
          "title": "POST Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve cadastrar produto com sucesso",
              "fullTitle": "POST Produtos deve cadastrar produto com sucesso",
              "timedOut": null,
              "duration": 660,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\ncy.api_postProdutos(nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.message).to.contain('Cadastro realizado com sucesso');\n  expect(response.body).to.be.not.null;\n  expect(response.body._id).is.not.null;\n});",
              "err": {},
              "uuid": "8a7797ff-580c-427e-8db4-232ae446c0dd",
              "parentUUID": "7544983c-46e9-4631-85d0-6a94e19f4ba0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a7797ff-580c-427e-8db4-232ae446c0dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 660,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46fc3f61-ab82-4b08-80d9-3342ee3feb60",
          "title": "Erros",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "não deve cadastrar com nome já cadastrado",
              "fullTitle": "Erros não deve cadastrar com nome já cadastrado",
              "timedOut": null,
              "duration": 846,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\ncy.api_postProdutos(nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(201);\n  cy.api_postProdutos(nome, preco, descricao, quantidade, jwt).then(response => {\n    expect(response.status).to.eq(400);\n    expect(response.body.message).to.contain('Já existe produto com esse nome');\n  });\n});",
              "err": {},
              "uuid": "33d0d777-ce9a-4076-918b-a0b0fe333667",
              "parentUUID": "46fc3f61-ab82-4b08-80d9-3342ee3feb60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve cadastrar com campos obrigatórios vazios",
              "fullTitle": "Erros não deve cadastrar com campos obrigatórios vazios",
              "timedOut": null,
              "duration": 641,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = '';\nconst preco = '';\nconst descricao = '';\nconst quantidade = '';\ncy.api_postProdutos(nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.all.keys('nome', 'preco', 'descricao', 'quantidade');\n  expect(response.body).to.deep.include({\n    nome: 'nome não pode ficar em branco',\n    preco: 'preco deve ser um número',\n    descricao: 'descricao não pode ficar em branco',\n    quantidade: 'quantidade deve ser um número'\n  });\n});",
              "err": {},
              "uuid": "f8b10c28-26d7-48ae-9bec-8f6c740dcdb9",
              "parentUUID": "46fc3f61-ab82-4b08-80d9-3342ee3feb60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve cadastrar com token de acesso expirado",
              "fullTitle": "Erros não deve cadastrar com token de acesso expirado",
              "timedOut": null,
              "duration": 628,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\nconst jwtExpirado = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRldHp6enpAdGVzdC5jb20iLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE3MzgxMDI5MzgsImV4cCI6MTczODEwMzUzOH0.HgbWbMft9z8mBGQS-VuWwShYeSccsOb61H0A8X_Rk6U';\ncy.api_postProdutos(nome, preco, descricao, quantidade, jwtExpirado).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body.message).to.contain('Token de acesso ausente, inválido, expirado ou usuário do token não existe mais');\n});",
              "err": {},
              "uuid": "5b24a796-625d-4de8-b4fe-d0bdd80febda",
              "parentUUID": "46fc3f61-ab82-4b08-80d9-3342ee3feb60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33d0d777-ce9a-4076-918b-a0b0fe333667",
            "f8b10c28-26d7-48ae-9bec-8f6c740dcdb9",
            "5b24a796-625d-4de8-b4fe-d0bdd80febda"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "43597685-60e1-46ec-9081-9f17753ae010",
          "title": "Erros para usuário não administrador",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "não deve cadastrar com usuário não administrador",
              "fullTitle": "Erros para usuário não administrador não deve cadastrar com usuário não administrador",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "53f4e1e1-bf9e-4b05-9230-b00dda5378d9",
              "parentUUID": "43597685-60e1-46ec-9081-9f17753ae010",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53f4e1e1-bf9e-4b05-9230-b00dda5378d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 421,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}