{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-31T00:13:31.876Z",
    "end": "2025-01-31T00:13:36.896Z",
    "duration": 5020,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d84c12cf-1222-4197-90b6-ead94ae87787",
      "title": "",
      "fullFile": "cypress\\tests\\api\\produtos\\putProdutos.cy.js",
      "file": "cypress\\tests\\api\\produtos\\putProdutos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d417a67d-36ff-4d87-887f-0414067ff665",
          "title": "PUT Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve editar produto com sucesso",
              "fullTitle": "PUT Produtos deve editar produto com sucesso",
              "timedOut": null,
              "duration": 880,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.message).to.contain('Registro alterado com sucesso');\n});",
              "err": {},
              "uuid": "4f2d9b2a-7aaa-4036-9a49-a955863d06e6",
              "parentUUID": "d417a67d-36ff-4d87-887f-0414067ff665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve cadastrar quando id não existir",
              "fullTitle": "PUT Produtos deve cadastrar quando id não existir",
              "timedOut": null,
              "duration": 904,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\nconst novoId = _faker.faker.number.int();\ncy.api_putProdutos(novoId, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.message).to.contain('Cadastro realizado com sucesso');\n  expect(response.body._id).is.not.null;\n});",
              "err": {},
              "uuid": "971de0a8-2fae-4b47-afa2-8ce05dbe2479",
              "parentUUID": "d417a67d-36ff-4d87-887f-0414067ff665",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f2d9b2a-7aaa-4036-9a49-a955863d06e6",
            "971de0a8-2fae-4b47-afa2-8ce05dbe2479"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1784,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13744764-717e-45e9-9974-58c4541af9e3",
          "title": "Erros",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "não deve editar com quantidade inválida",
              "fullTitle": "Erros não deve editar com quantidade inválida",
              "timedOut": null,
              "duration": 932,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.commerce.productName();\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('quantidade', 'quantidade deve ser um número');\n});",
              "err": {},
              "uuid": "398c5f45-5236-43b8-8341-78ae318e8d3b",
              "parentUUID": "13744764-717e-45e9-9974-58c4541af9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve editar com nome existente",
              "fullTitle": "Erros não deve editar com nome existente",
              "timedOut": null,
              "duration": 1355,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.message).to.contain('Registro alterado com sucesso');\n  const nomeProduto2 = _faker.faker.commerce.productName();\n  cy.api_postProdutos(nomeProduto2, preco, descricao, quantidade, jwt).then(response => {\n    expect(response.status).to.eq(201);\n    const novoId = response.body._id;\n    cy.api_putProdutos(novoId, nome, preco, descricao, quantidade, jwt).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.body.message).to.contain('Já existe produto com esse nome');\n    });\n  });\n});",
              "err": {},
              "uuid": "3c156496-eb2f-461b-a365-9c2801645cf9",
              "parentUUID": "13744764-717e-45e9-9974-58c4541af9e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve editar com campos obrigatórios inválidos",
              "fullTitle": "Erros não deve editar com campos obrigatórios inválidos",
              "timedOut": null,
              "duration": 909,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = '';\nconst preco = '';\nconst descricao = '';\nconst quantidade = '';\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.all.keys('nome', 'preco', 'descricao', 'quantidade');\n  expect(response.body).to.deep.include({\n    nome: 'nome não pode ficar em branco',\n    preco: 'preco deve ser um número',\n    descricao: 'descricao não pode ficar em branco',\n    quantidade: 'quantidade deve ser um número'\n  });\n});",
              "err": {},
              "uuid": "5b0e1d28-9b2d-48a9-9b14-ca817d8f0110",
              "parentUUID": "13744764-717e-45e9-9974-58c4541af9e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "398c5f45-5236-43b8-8341-78ae318e8d3b",
            "3c156496-eb2f-461b-a365-9c2801645cf9",
            "5b0e1d28-9b2d-48a9-9b14-ca817d8f0110"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3196,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}