{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-31T14:58:19.030Z",
    "end": "2025-01-31T14:58:24.091Z",
    "duration": 5061,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1efa6101-aa5d-4cbb-95cc-8e4380db1a5d",
      "title": "",
      "fullFile": "cypress\\tests\\api\\produtos\\putProdutos.cy.js",
      "file": "cypress\\tests\\api\\produtos\\putProdutos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "de51029c-97ff-421f-a7f6-9952a7ce6f9d",
          "title": "PUT Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve editar produto com sucesso",
              "fullTitle": "PUT Produtos deve editar produto com sucesso",
              "timedOut": null,
              "duration": 917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.message).to.contain('Registro alterado com sucesso');\n});",
              "err": {},
              "uuid": "c4367878-3564-4d8d-b616-f0df0b47d69d",
              "parentUUID": "de51029c-97ff-421f-a7f6-9952a7ce6f9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve cadastrar quando id não existir",
              "fullTitle": "PUT Produtos deve cadastrar quando id não existir",
              "timedOut": null,
              "duration": 892,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\nconst novoId = _faker.faker.number.int();\ncy.api_putProdutos(novoId, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.message).to.contain('Cadastro realizado com sucesso');\n  expect(response.body._id).is.not.null;\n});",
              "err": {},
              "uuid": "9c97e118-77a2-4730-944b-47dafdab4255",
              "parentUUID": "de51029c-97ff-421f-a7f6-9952a7ce6f9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4367878-3564-4d8d-b616-f0df0b47d69d",
            "9c97e118-77a2-4730-944b-47dafdab4255"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f8a561f-3930-444a-9e35-e5fecd637d67",
          "title": "Erros",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "não deve editar com quantidade inválida",
              "fullTitle": "Erros não deve editar com quantidade inválida",
              "timedOut": null,
              "duration": 1001,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.commerce.productName();\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.property('quantidade', 'quantidade deve ser um número');\n});",
              "err": {},
              "uuid": "a82878cb-1f50-46b5-ad15-607d9d4caa4c",
              "parentUUID": "3f8a561f-3930-444a-9e35-e5fecd637d67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve editar com nome existente",
              "fullTitle": "Erros não deve editar com nome existente",
              "timedOut": null,
              "duration": 1330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.commerce.productName();\nconst preco = _faker.faker.number.int();\nconst descricao = _faker.faker.commerce.productDescription();\nconst quantidade = _faker.faker.number.int();\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.message).to.contain('Registro alterado com sucesso');\n  const nomeProduto2 = _faker.faker.commerce.productName();\n  cy.api_postProdutos(nomeProduto2, preco, descricao, quantidade, jwt).then(response => {\n    expect(response.status).to.eq(201);\n    const novoId = response.body._id;\n    cy.api_putProdutos(novoId, nome, preco, descricao, quantidade, jwt).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.body.message).to.contain('Já existe produto com esse nome');\n    });\n  });\n});",
              "err": {},
              "uuid": "feba7229-41c5-4496-8944-bff4b21f8fe4",
              "parentUUID": "3f8a561f-3930-444a-9e35-e5fecd637d67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve editar com campos obrigatórios inválidos",
              "fullTitle": "Erros não deve editar com campos obrigatórios inválidos",
              "timedOut": null,
              "duration": 882,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = '';\nconst preco = '';\nconst descricao = '';\nconst quantidade = '';\ncy.api_putProdutos(_id, nome, preco, descricao, quantidade, jwt).then(response => {\n  expect(response.status).to.eq(400);\n  expect(response.body).to.have.all.keys('nome', 'preco', 'descricao', 'quantidade');\n  expect(response.body).to.deep.include({\n    nome: 'nome não pode ficar em branco',\n    preco: 'preco deve ser um número',\n    descricao: 'descricao não pode ficar em branco',\n    quantidade: 'quantidade deve ser um número'\n  });\n});",
              "err": {},
              "uuid": "8b4e7ee8-98d8-4945-abbf-8b0cc4041de2",
              "parentUUID": "3f8a561f-3930-444a-9e35-e5fecd637d67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a82878cb-1f50-46b5-ad15-607d9d4caa4c",
            "feba7229-41c5-4496-8944-bff4b21f8fe4",
            "8b4e7ee8-98d8-4945-abbf-8b0cc4041de2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}