{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-31T00:15:54.374Z",
    "end": "2025-01-31T00:16:14.996Z",
    "duration": 20622,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f4d8f0f2-dd86-423b-88e3-bb0ddcf6544d",
      "title": "",
      "fullFile": "cypress\\tests\\e2e\\usuarios\\cadastroUsuarioAdmin.cy.js",
      "file": "cypress\\tests\\e2e\\usuarios\\cadastroUsuarioAdmin.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f0eb1123-16a9-4f9e-afc1-a7ea55902181",
          "title": "Cadastro de Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve cadastrar usuário com sucesso pelo menu Cadastrar Usuários",
              "fullTitle": "Cadastro de Usuários deve cadastrar usuário com sucesso pelo menu Cadastrar Usuários",
              "timedOut": null,
              "duration": 5663,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\ncy.cadastrarUsuarioMenuCadastro(nome, email, password);\ncy.url().should('be.equal', `${baseUrl}/admin/listarusuarios`);\ncy.get('table tbody').contains('td', nome).should('be.visible');\ncy.get('table tbody').contains('td', email).should('be.visible');\ncy.get('table tbody').contains('td', password).should('be.visible');",
              "err": {},
              "uuid": "068a4d3c-5a70-43ee-84aa-20178425a754",
              "parentUUID": "f0eb1123-16a9-4f9e-afc1-a7ea55902181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve cadastrar usuário administrador com sucesso pelo menu Cadastrar Usuários",
              "fullTitle": "Cadastro de Usuários deve cadastrar usuário administrador com sucesso pelo menu Cadastrar Usuários",
              "timedOut": null,
              "duration": 4559,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\ncy.cadastrarUsuarioAdminMenuCadastro(nome, email, password);\ncy.url().should('be.equal', `${baseUrl}/admin/listarusuarios`);\ncy.get('table tbody').contains('td', nome).should('be.visible');\ncy.get('table tbody').contains('td', email).should('be.visible');\ncy.get('table tbody').contains('td', password).should('be.visible');",
              "err": {},
              "uuid": "b44eee5c-c95f-45d0-b108-efeeb0cbdad0",
              "parentUUID": "f0eb1123-16a9-4f9e-afc1-a7ea55902181",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "068a4d3c-5a70-43ee-84aa-20178425a754",
            "b44eee5c-c95f-45d0-b108-efeeb0cbdad0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "314c883e-6d73-4723-bd73-5cf17bdbb701",
          "title": "Erros",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "não deve cadastrar usuário com e-mail inválido",
              "fullTitle": "Erros não deve cadastrar usuário com e-mail inválido",
              "timedOut": null,
              "duration": 3768,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = 'teste@teste';\nconst password = _faker.faker.internet.password();\ncy.cadastrarUsuarioMenuCadastro(nome, email, password);\ncy.contains('.alert', 'Email deve ser um email válido').should('be.visible');\ncy.url().should('be.equal', `${baseUrl}/admin/cadastrarusuarios`);",
              "err": {},
              "uuid": "7b59d370-5587-4211-b822-f384645a2262",
              "parentUUID": "314c883e-6d73-4723-bd73-5cf17bdbb701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve cadastrar usuário com email já cadastrado",
              "fullTitle": "Erros não deve cadastrar usuário com email já cadastrado",
              "timedOut": null,
              "duration": 3646,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const nome = _faker.faker.person.fullName();\nconst email = _faker.faker.internet.email();\nconst password = _faker.faker.internet.password();\nconst administrador = 'true';\ncy.api_postUsuarios(nome, email, password, administrador).then(response => {\n  expect(response.status).to.eq(201);\n});\ncy.cadastrarUsuarioMenuCadastro(nome, email, password);\ncy.contains('.alert', 'Este email já está sendo usado').should('be.visible');\ncy.url().should('be.equal', `${baseUrl}/admin/cadastrarusuarios`);",
              "err": {},
              "uuid": "e2c44c7b-eec2-40f0-9541-a5eaa07de09d",
              "parentUUID": "314c883e-6d73-4723-bd73-5cf17bdbb701",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "não deve cadastrar com campos obrigatórios vazios",
              "fullTitle": "Erros não deve cadastrar com campos obrigatórios vazios",
              "timedOut": null,
              "duration": 2830,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuarioMenuCadastroComCamposVazios();\ncy.contains('.jumbotron form', 'Nome é obrigatório').should('be.visible');\ncy.contains('.jumbotron form', 'Email é obrigatório').should('be.visible');\ncy.contains('.jumbotron form', 'Password é obrigatório').should('be.visible');\ncy.url().should('be.equal', `${baseUrl}/admin/cadastrarusuarios`);",
              "err": {},
              "uuid": "2710d57b-f48e-4a99-a193-250e2c61c92e",
              "parentUUID": "314c883e-6d73-4723-bd73-5cf17bdbb701",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b59d370-5587-4211-b822-f384645a2262",
            "e2c44c7b-eec2-40f0-9541-a5eaa07de09d",
            "2710d57b-f48e-4a99-a193-250e2c61c92e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}